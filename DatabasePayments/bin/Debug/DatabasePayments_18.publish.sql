/*
Deployment script for RR61

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "RR61"
:setvar DefaultFilePrefix "RR61"
:setvar DefaultDataPath "M:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\Data\"
:setvar DefaultLogPath "L:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--:r .\Reporter\payments\ETLPaymentsProcess\DatabasePayments\dbo\Tables\Payments.sql
USE RR61
GO

IF exists(select * from dbo.sysobjects where id = OBJECT_ID(N'[dbo].[Payments]') and OBJECTPROPERTY(id, N'IsUserTable')=1)
drop table [dbo].[Payments]
GO

CREATE TABLE [dbo].[Payments] (
    [Id]             BIGINT   Identity(1,1)             NOT NULL,
    [IRN]            VARCHAR(50)  NULL,
    [FUN]            varchar (10)        NULL,
    [FUNDS_ORIG_AMT] MONEY            NULL,
    [FUNDS_MOP]      varchar (20)       NULL,
    [AsofDate]           DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);
GO
USE RR61
GO

IF exists(select * from dbo.sysobjects where id = OBJECT_ID(N'[dbo].[PaymentsExhange]') and OBJECTPROPERTY(id, N'IsUserTable')=1)
drop table [dbo].[PaymentsExhange]
GO

CREATE TABLE [dbo].[PaymentsExhange] (
    [Id]             BIGINT     Identity(1,1)           NOT NULL,
	[Country]            VARCHAR(50) NULL,
	[Origin]            varchar(50) NULL,
    [ftxousd]            DECIMAL (28, 20) NULL,
    [fxtoeur]            DECIMAL (28, 20) NULL,
    [AsofDate]           DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);
GO

USE RR61
GO

-- ================================================
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


IF EXISTS (
        SELECT type_desc, type
        FROM sys.procedures WITH(NOLOCK)
        WHERE NAME = 'GetExchangePaymentsbyDateandBranchName'
            AND type = 'P'
      )
     DROP PROCEDURE dbo.GetExchangePaymentsbyDateandBranchName
GO
-- =============================================
-- Author:		<Martinez,Cesar>
-- Create date: <12/23/2020>
-- Description:	<Description:After impor the files from egift and exchange rate the below sp going to build que qquery up and generate the output file>
-- =============================================
CREATE PROCEDURE dbo.GetExchangePaymentsbyDateandBranchName 
	-- Add the parameters for the stored procedure here
	 @Branch varchar(50) = 'NY', 
	 @AsOfDateEgiftperDay DATETIME,  --'12/23/2020'
	 @AsOfDatePaymentExchangeperDay DATETIME   -- = '11/20/2020'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Select statements for procedure here	
	--add Risk to the quey 
--input  Branch ESp,NY, MI , asofdate for payemntexchange , asofdate for payments or egift load file

SELECT 'FRY15' as ReportID, BoxId, 'NYB' as BranchID, SUM( ((Funds_ORIG_AMT/1) * (1/ftxousd)))  as Amount, [Description] as Comments, AsofDate as StartDate,AsofDate as EndDate ,  FUN 
FROM [RR61].[dbo].[Payments]  as Payments inner join 
(
select Country, Origin, ftxousd from [RR61].[dbo].[PaymentsExhange]   where AsofDate = @AsOfDateEgiftperDay
and Country =  @Branch
) as PaymentsEX on Payments.FUN = PaymentsEX.Origin  inner join (
select DISTINCT BoxId,SUBSTRING([Description],Charindex('(',[Description])+1,3) as Country, [Description] from  [RR61].dbo.vBoxDetails where  BoxId in ('RISKM377','RISKM378','RISKM379','RISKM380','RISKM381','RISKM382','RISKM383','RISKM384','RISKM385','RISKM386','RISKY835','RISKM387','RISKM388','RISKY836','RISKY837','RISKM389','RISKM436','RISKKW46','RISKKW48','RISKKW50','RISKKW52')
and [Description] like  '%[\((*?)\)]%'
) as Risk on Payments.FUN = Risk.Country where Payments.[AsofDate] =  @AsOfDatePaymentExchangeperDay
Group by FUN , BoxId,[Description],AsofDate Order by FUN desc


END
GO

GO
PRINT N'Update complete.';


GO
